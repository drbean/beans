#!/usr/bin/perl

use strict;
use warnings;

use List::Util qw/sum/;
use YAML qw/LoadFile DumpFile/;
use IO::All;
use IO::Handle;

use Getopt::Long;
use Pod::Usage;
use Cwd;

my $man = 0;
my $help = 0;
my ($league );

GetOptions (
	"league=s" => \$league,
	'help|?' => \$help, man => \$man) or pod2usage(2);
pod2usage(1) if $help;
pod2usage(-exitstatus => 0, -verbose => 2) if $man;

$league ||= getcwd;
my $class = LoadFile "$league/league.yaml"
					or die "No league with this name: $!";
my @sessions = @{$class->{series}};
my @members = sort { $a->{id} cmp $b->{id} } @{$class->{member}};
my %ids = map { $_->{name} => $_->{id} } @members;
my %names = map { $_->{id} => $_->{name} } @members;
my @ids = values %ids;
my @names = values %names;
my $names = join '|', @names;
my $nameqr = qr/$names/;

my $hwdir = $class->{hw} || "$league/homework";
my @hwfiles = glob "$hwdir/*.yaml";
my @rounds = map { m/^$hwdir\/(\d+)\.yaml$/ } @hwfiles;
@rounds = sort {$a<=>$b} @rounds;
my $hwMax = $class->{hwMax};
my $totalMax = @rounds * $hwMax;
my %hw = map { $_ => LoadFile "$hwdir/$_.yaml" } @rounds;

my %grades = map { 	my $id = $_;
			$id => [ map { $hw{$_}{$id} } @rounds ]
			} @ids;

my $oldtotal = LoadFile "$hwdir/total.yaml";
my $oldpercent = LoadFile "$hwdir/percent.yaml";
my ($newtotal, $newpercent);

#format STDOUT_TOP = 
#                            Homework
#Name        ID          Weeks                 Total HomeWork Grade
#-------------------------------------------------------------------------
#.

my @formats = qw/'' WEEKS1 WEEKS2 WEEKS3 WEEKS4 WEEKS5 WEEKS6 WEEKS7 WEEKS8 WEEKS9 WEEKS10 WEEKS11 WEEKS12 WEEKS13/;
REP->format_name($formats[@rounds]);
open REP, '>-' or die 'STDOUT? $!'; 
# my @romans = qw/'' I II III IV V VI VII VIII IX X XI XII XIII XIV XV XVI XVII XVIII/;
my @romans = qw/'' 01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18/;

local $,=', ';
print REP
"             $class->{league} Homework
                    Weeks: Grade(0-$hwMax)/100
Name        ID  @romans[@rounds]   Total/$totalMax Grade/100
-------------------------------------------------------------------------
";
foreach my $member ( @members ) 
{
	our $id = $member->{id};
	our $name = $names{$id};
	our @indgrades = @{$grades{$id}};
	@indgrades = map { $_ == 0.5? substr $_, 1: $_ } @indgrades;
	die "No homework grade for $name $id" if grep {not defined} @indgrades;
	our $grade = sum @indgrades;
	our $percent = 100 * $grade / $totalMax;
	$newtotal->{$id} = $grade;
	$newpercent->{$id} = $percent;
	write REP;
	# $grades->{$partner} = $newGrade;
} 


my $log = io "$hwdir/hwtotal.log";
localtime() . ": $0 run to calculate homework totals at round $rounds[-1].\n"
									>> $log;
DumpFile ("$hwdir/total.yaml.bak", $oldtotal);
DumpFile ("$hwdir/total.yaml", $newtotal);
DumpFile ("$hwdir/percent.yaml.bak", $oldtotal);
DumpFile ("$hwdir/percent.yaml", $newtotal);

our ($name, $id, @indgrades, $grade, $percent);
format WEEKS1 =
@<<<<<< @<<<<<<< @<<   @<<<<<   @<<
$name,  $id,	@indgrades, $grade, $percent
.
format WEEKS2 =
@<<<<<< @<<<<<<< @<<@<<   @<<<<<   @<<
$name,  $id,	@indgrades, $grade, $percent
.
format WEEKS3 =
@<<<<<< @<<<<<<< @<<@<<@<<   @<<<<<   @<<
$name,  $id,	@indgrades, $grade, $percent
.
format WEEKS4 =
@<<<<<< @<<<<<<< @<<@<<@<<@<<   @<<<<<   @<<
$name,  $id,	@indgrades, $grade, $percent
.
format WEEKS5 =
@<<<<<< @<<<<<<< @<<@<<@<<@<<@<<   @<<<<<   @<<
$name,  $id,	@indgrades, $grade, $percent
.
format WEEKS6 =
@<<<<<< @<<<<<<< @<<@<<@<<@<<@<<@<<   @<<<<<   @<<
$name,  $id,	@indgrades, $grade, $percent
.
format WEEKS7 =
@<<<<<< @<<<<<<< @<<@<<@<<@<<@<<@<<@<<   @<<<<<   @<<
$name,  $id,	@indgrades, $grade, $percent
.
format WEEKS8 =
@<<<<<< @<<<<<<< @<<@<<@<<@<<@<<@<<@<<@<<   @<<<<<   @<<
$name,  $id,	@indgrades, $grade, $percent
.
format WEEKS9 =
@<<<<<< @<<<<<<< @<<@<<@<<@<<@<<@<<@<<@<<@<<   @<<<<<   @<<
$name,  $id,	@indgrades, $grade, $percent
.
format WEEKS10 =
@<<<<<< @<<<<<<< @<<@<<@<<@<<@<<@<<@<<@<<@<<@<<   @<<<<<   @<<
$name,  $id,	@indgrades, $grade, $percent
.
format WEEKS11 =
@<<<<<< @<<<<<<< @<<@<<@<<@<<@<<@<<@<<@<<@<<@<<@<<   @<<<<<   @<<
$name,  $id,	@indgrades, $grade, $percent
.
format WEEKS12 =
@<<<<<< @<<<<<<< @<<@<<@<<@<<@<<@<<@<<@<<@<<@<<@<<@<<   @<<<<<   @<<
$name,  $id,	@indgrades, $grade, $percent
.
format WEEKS13 =
@<<<<<< @<<<<<<< @<<@<<@<<@<<@<<@<<@<<@<<@<<@<<@<<@<<@<<   @<<<<<   @<<
$name,  $id,	@indgrades, $grade, $percent
.
format WEEKS14 =
@<<<<<< @<<<<<<< @<<@<<@<<@<<@<<@<<@<<@<<@<<@<<@<<@<<@<<@<<   @<<<<<   @<<
$name,  $id,	@indgrades, $grade, $percent
.
__END__

=head1 NAME

cumulative - Add player results in individual rounds to get a cumulative total and show present standing

=head1 SYNOPSIS

hwtotal [options] 

Options:

--help            This help message

--man            A man page

--league m/j	The league whose results these are

=head1 OPTIONS

=over 8

=item B<-league>

The league to which the redeemer belongs

=back

=head1 DESCRIPTION

B<hwtotal> tallies individuals' scores in the files in the hw directory recorded in league.yaml. It stores the total in cumulative.yaml, in the same directory.

=cut

