#!/usr/bin/perl

use strict;
use warnings;

use List::Util qw/sum min max/;
use List::MoreUtils qw/all/;
use YAML qw/LoadFile/;
use IO::All;
use IO::Handle;

use Getopt::Long;
use Pod::Usage;
use Cwd;

my $man = 0;
my $help = 0;
my ($league);

GetOptions (
	"league=s" => \$league, 
	'help|?' => \$help, man => \$man) or pod2usage(2);
pod2usage(1) if $help;
pod2usage(-exitstatus => 0, -verbose => 2) if $man;

$league ||= getcwd;
my $class = LoadFile "$league/league.yaml"
					or die "No league with this name: $!";
my @members = sort { $a->{id} cmp $b->{id} } @{$class->{member}};
my %ids = map { $_->{name} => $_->{id} } @members;
my %names = map { $_->{id} => $_->{name} } @members;
my $beancount = LoadFile "$league/beans.yaml";
my $hwdir = $class->{hw};
# my $hwfiles = $class->{hw};
# my $hw = map { LoadFile "$hwdir/$_.yaml" } @$hwfiles;
my $hw = LoadFile "$hwdir/cumulative.yaml";
my $examdirs = $class->{exams};
my @exams = map { LoadFile "$league/$_/g.yaml" } @$examdirs;

open REP, '>grades.tmp' or die 'grades.tmp? $!'; 
my @format_top = qw/'' TOP1 TOP2 TOP3 TOP4/;
my @formats = qw/'' EXAM1 EXAM2 EXAM3 EXAM4/;
REP->format_top_name($format_top[@exams]);
REP->format_name($formats[@exams]);
foreach my $member ( @members ) 
{
	our $id = $member->{id};
	our $name = $member->{name};
	our $homework = min 100, $hw->{$id} || 0;
	our $beans = min 100, $beancount->{$name} || 0;
	# my $beans = $beans->{$name} || 0;
	# my @examGrades = map { max 0, $exams[$_]->{$id}*5/6 } 0..$#exams;
	# my $grade = $beans/5 + $homework + sum @examGrades;
	our @examGrades = map { max 0, $exams[$_]->{$id} } 0..$#exams;
	warn "$id: " . @examGrades . " exams" unless 
				all { defined $_ } @examGrades;
	my $examGrade = sum(@examGrades) / @examGrades ;
	# our $grade = (min(100, $beans*15) + min(100,$homework*5/2) + $examGrades[0])/3;
	# our $grade = $beans*2/10 + $homework*2/10 + $examGrade*(100/15)*6/10;
	our $grade = $beans*2/10 + $homework*4/10 + $examGrade*(100/10)*4/10;
	warn "$id: classwork $beans, homework $homework, exams $examGrade"
		unless ( defined $beans and defined $homework and 
				defined $examGrade );

	write REP;
}

close REP;

format TOP1 = 
                          Grades
                                               Exams
Name        ID      Classwork    Homework  I             Total???
-------------------------------------------------------------------------
.
format TOP2 = 
                          Grades
                                               Exams
Name        ID      Classwork    Homework  I  II         Total???
-------------------------------------------------------------------------
.
format TOP3 = 
                          Grades
                                           Exams
Name        ID      Classwork    Homework   I    II   III   Total???
-------------------------------------------------------------------------
.
format TOP4 =
                          Grades
                                               Exams
Name        ID      Classwork    Homework      I  II  III  Final  Total
-------------------------------------------------------------------------
.
our ($name, $id, $beans, $homework, @examGrades, $grade);
format EXAM1 =
@<<<<<<<<<< @<<<<<<<<<  @<<<<<   @<<<<<   @<<          @<<
$name,      $id,        $beans,  $homework, @examGrades, $grade
.
format EXAM2 =
@<<<<<<<<<< @<<<<<<<<<  @<<<<<   @<<<<<   @<<  @<<       @<<
$name,      $id,        $beans,  $homework, @examGrades, $grade
.
format EXAM3 =
@<<<<<<<<<< @<<<<<<<<<  @<<<<<   @<<<<<   @<<  @<<  @<<    @<<
$name,      $id,        $beans,  $homework, @examGrades, $grade
.
format EXAM4 =
@<<<<<<<<<< @<<<<<<<<<  @<<<<<   @<<<<<   @<<  @<<  @<<  @<<    @<<
$name,      $id,        $beans,  $homework, @examGrades, $grade
.
__DATA__

# @<<<<<<<<<< @<<<<<<<<<  @<<<<<   @<<<<<   @<< @<< @<<  @<   @<
# @<<<<<<<<<< @<<<<<<<<<  @<<<<<   @<<<<<   @<<   @<


my $finalexam = LoadFile "/home/$ENV{USER}/$league/f/gf.yaml";
open FINAL, '>>grades.tmp' or die 'grades.tmp? $!'; 
format FINAL_TOP = 
---
Grades
Final/100
---
.
foreach my $member ( @members ) 
{
	my $id = $member->{id};
	my $final = round( $finalexam->{$id} * 5 );
	format FINAL =
@<<<<<<	@<<<
$id,	$final
.
	write FINAL;
}
close FINAL;

my $midterm2 = LoadFile "/home/$ENV{USER}/$league/m2/gm2.yaml";
open COURSE, '>>grades.tmp' or die 'grades.tmp? $!'; 
format COURSE_TOP = 
---
Grades
Coursework/100
---
.
foreach my $member ( @members ) 
{
	my $id = $member->{id};
	my $name = $member->{name};
	my $homework = min 20, $hw->{$id};
	my $beans = min 20, $beans->{$name}/5;
	my $exam = max 0, $midterm2->{$id};
	my $coursework = round( ($homework + $beans + $exam) * 5 / 3 );
	format COURSE =
@<<<<<<	@<<<
$id,	$coursework
.
	write COURSE;
}

sub round 
{
	my $score = shift;
	$score - int( $score ) >= 0.5? int( $score ) + 1: int( $score );
}

__END__

=head1 NAME

grades - Calculate sum of beans/5, hw, exams and print a report.

=head1 SYNOPSIS

grades -l m/j

=head1 OPTIONS

=over 8

=item B<--man> A man page

=item B<--help> This help message

=item B<--league> The league to which the report belongs, a path from the present working directory to the directory in which league.yaml exists.

=back

=head1 DESCRIPTION

B<grades> totals scores that students have earned for classwork, homework and exams. It adds the total beans (divided by 5) to homework, midterm and final scores and outputs the grade so far.

Beans (ie, classwork) are in beans.yaml. Homework is in $hw/cumulative.yaml. (Use B<hwtotal> to write this.) Exam scores are in $exams/g.yaml. $hw, $exams are in ./league.yaml.

=cut
