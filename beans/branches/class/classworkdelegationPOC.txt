# in Grades.pm

package Grades;

use MooseX::Declare;


role Exams {
	has 'exam_total' => ( is => 'ro', isa => 'Num', default => 1 );
}
role Homework {
	has 'homework_total' => ( is => 'ro', isa => 'Num', default => 1 );
}
class Classwork {
	has 'approach' => ( is => 'ro', isa => 'Approach', required => 1,
		handles => [ 'classwork_total' ] );
}

class Approach {
	has 'type' => ( is => 'ro', isa => 'Str', required => 1 );
	method classwork_total {
		my $total = $self->type->new->total;
	}
}
 
class ActivityType1 {
	has 'total' => ( is => 'ro', isa => 'Num', default => 42 );
}
class ActivityType2 {
	has 'total' => ( is => 'ro', isa => 'Num', default => 99 );
}
	
class Grades with Homework with Exams {
	has 'classwork' => ( is => 'ro', isa => 'Classwork', required => 1,
		handles => [ 'classwork_total' ] );
	method grade {
		my $classwork = $self->classwork_total;
		my $homework = $self->homework_total;
		my $exams = $self->exam_total;
		return $classwork + $homework + $exams;
	}
}

# in script_files/activity.rc

package main;

use Grades;

my $a = Approach->new( type => 'ActivityType1' );
my $c = Classwork->new( approach => $a );
my $g = Grades->new( classwork => $c );
my $grade1 = $g->grade;  # 44
